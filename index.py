import streamlit as st
import pandas as pd
import json
from datetime import datetime

# Carregar dados
with open("dados.json", encoding="utf-8") as f:
    data = json.load(f)

df = pd.DataFrame(data)
df.columns = [col.strip() for col in df.columns]



# Limpar e converter valores monet√°rios
def limpa_valor(valor):
    if isinstance(valor, str):
        return float(valor.replace("R$", "").replace(".", "").replace(",", ".").strip())
    return valor

colunas_monetarias = [
    "Aluguel", "Aluguel + Taxa", "Condominio com √°gua", "Condominio",
    "√ÅGUA", "IPTU", "TAXA BANC", "IPTU+√ÅGUA", "condominio + Agua + IPTU", "Total BOLET"
]
for col in colunas_monetarias:
    df[col] = df[col].apply(limpa_valor)

# Verifica√ß√£o do vencimento
def verificar_vencimento(data_str):
    try:
        data_boleto = datetime.strptime(data_str, "%d/%m/%Y")
        hoje = datetime.now()
        return "‚úÖ Em dia" if data_boleto >= hoje else "‚ùå Vencido"
    except:
        return "‚ùì Data inv√°lida"

df["Status Vencimento"] = df["vencimento boleto"].apply(verificar_vencimento)

# Fun√ß√£o para aplicar destaque em vermelho para boletos vencidos
def destaque_vencidos(row):
    if row["Status Vencimento"] == "‚ùå Vencido":
        return ["background-color: #ffcccc"] * len(row)
    else:
        return [""] * len(row)

# Exibir tabela com destaque
st.title("üìä Tabela de Boletos - M√™s 04/2025")

formato_real = "R$ {:,.2f}".format
st.dataframe(
    df.style
    .format({col: formato_real for col in colunas_monetarias})
    .apply(destaque_vencidos, axis=1)
)

# Filtro por locat√°rio
locatarios = df["Locat√°rio"].unique()
loc_selecionado = st.selectbox("Filtrar por locat√°rio", options=locatarios)
df_filtrado = df[df["Locat√°rio"] == loc_selecionado]
st.dataframe(
    df_filtrado.style
    .format({col: formato_real for col in colunas_monetarias})
    .apply(destaque_vencidos, axis=1)
)


st.divider()
# Calcular total geral
total_geral = df["Total BOLET"].sum()

# Exibir um card com o total geral
st.markdown("### üí∞ Total Geral dos Boletos")
st.metric(label="Valor total", value=f"R$ {total_geral:,.2f}".replace(",", "X").replace(".", ",").replace("X", "."))
